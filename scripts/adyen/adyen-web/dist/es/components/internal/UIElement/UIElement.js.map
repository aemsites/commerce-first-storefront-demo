{"version":3,"file":"UIElement.js","sources":["../../../../../src/components/internal/UIElement/UIElement.tsx"],"sourcesContent":["import { h } from 'preact';\nimport BaseElement from '../BaseElement/BaseElement';\nimport PayButton from '../PayButton';\nimport { assertIsDropin, cleanupFinalResult, getRegulatoryDefaults, sanitizeResponse, verifyPaymentDidNotFail } from './utils';\nimport AdyenCheckoutError from '../../../core/Errors/AdyenCheckoutError';\nimport { hasOwnProperty } from '../../../utils/hasOwnProperty';\nimport { Resources } from '../../../core/Context/Resources';\nimport { ANALYTICS_SUBMIT_STR } from '../../../core/Analytics/constants';\n\nimport type { AnalyticsInitialEvent, SendAnalyticsObject } from '../../../core/Analytics/types';\nimport type { CoreConfiguration, ICore, AdditionalDetailsData } from '../../../core/types';\nimport type { ComponentMethodsRef, PayButtonFunctionProps, UIElementProps, UIElementStatus } from './types';\nimport type { CheckoutSessionDetailsResponse, CheckoutSessionPaymentResponse } from '../../../core/CheckoutSession/types';\nimport type {\n    ActionHandledReturnObject,\n    CheckoutAdvancedFlowResponse,\n    Order,\n    PaymentAction,\n    PaymentAmount,\n    PaymentData,\n    PaymentMethodsResponse,\n    PaymentResponseData,\n    RawPaymentResponse\n} from '../../../types/global-types';\nimport type { IDropin } from '../../Dropin/types';\nimport type { NewableComponent } from '../../../core/core.registry';\nimport CancelError from '../../../core/Errors/CancelError';\n\nimport './UIElement.scss';\n\nexport abstract class UIElement<P extends UIElementProps = UIElementProps> extends BaseElement<P> {\n    protected componentRef: any;\n\n    protected resources: Resources;\n\n    public elementRef: UIElement;\n\n    public static type = undefined;\n\n    /**\n     * Defines all txVariants that the Component supports (in case it support multiple ones besides the 'type' one)\n     */\n    public static txVariants: string[] = [];\n\n    constructor(checkout: ICore, props?: P) {\n        super(checkout, props);\n\n        this.core.register(this.constructor as NewableComponent);\n\n        this.submit = this.submit.bind(this);\n        this.setState = this.setState.bind(this);\n        this.onComplete = this.onComplete.bind(this);\n        this.handleAction = this.handleAction.bind(this);\n        this.handleOrder = this.handleOrder.bind(this);\n        this.handleAdditionalDetails = this.handleAdditionalDetails.bind(this);\n        this.handleResponse = this.handleResponse.bind(this);\n        this.setElementStatus = this.setElementStatus.bind(this);\n        this.submitAnalytics = this.submitAnalytics.bind(this);\n        this.makePaymentsCall = this.makePaymentsCall.bind(this);\n        this.makeAdditionalDetailsCall = this.makeAdditionalDetailsCall.bind(this);\n        this.submitUsingSessionsFlow = this.submitUsingSessionsFlow.bind(this);\n\n        this.elementRef = (props && props.elementRef) || this;\n        this.resources = this.props.modules ? this.props.modules.resources : undefined;\n\n        this.storeElementRefOnCore(this.props);\n\n        this.onEnterKeyPressed = this.onEnterKeyPressed.bind(this);\n        this.onActionHandled = this.onActionHandled.bind(this);\n    }\n\n    protected override buildElementProps(componentProps?: P) {\n        const globalCoreProps = this.core.getCorePropsForComponent();\n        const isStoredPaymentMethod = !!componentProps?.isStoredPaymentMethod;\n        const paymentMethodsResponseProps = isStoredPaymentMethod\n            ? {}\n            : this.core.paymentMethodsResponse.find(componentProps?.type || this.constructor['type']);\n\n        const finalProps = {\n            showPayButton: true,\n            ...globalCoreProps,\n            ...paymentMethodsResponseProps,\n            ...componentProps\n        };\n\n        const isDropin = assertIsDropin(this as unknown as IDropin);\n\n        this.props = this.formatProps({\n            ...this.constructor['defaultProps'], // component defaults\n            ...getRegulatoryDefaults(this.core.options.countryCode, isDropin), // regulatory defaults\n            ...finalProps // the rest (inc. merchant defined config)\n        });\n    }\n\n    protected storeElementRefOnCore(props?: P) {\n        if (!props?.isDropin) {\n            this.core.storeElementReference(this);\n        }\n    }\n\n    public isAvailable(): Promise<void> {\n        return Promise.resolve();\n    }\n\n    public setState(newState: object): void {\n        this.state = { ...this.state, ...newState };\n        this.onChange();\n    }\n\n    public showValidation(): this {\n        if (this.componentRef && this.componentRef.showValidation) this.componentRef.showValidation();\n        return this;\n    }\n\n    public setElementStatus(status: UIElementStatus, props?: any): this {\n        this.elementRef?.setStatus(status, props);\n        return this;\n    }\n\n    public setStatus(status: UIElementStatus, props?): this {\n        if (this.componentRef?.setStatus) {\n            this.componentRef.setStatus(status, props);\n        }\n        return this;\n    }\n\n    protected onChange(): void {\n        this.props.onChange?.(\n            {\n                data: this.data,\n                isValid: this.isValid,\n                errors: this.state.errors,\n                valid: this.state.valid\n            },\n            this.elementRef\n        );\n    }\n\n    // Only called once, for UIElements (including Dropin), as they are being mounted\n    protected setUpAnalytics(setUpAnalyticsObj: AnalyticsInitialEvent) {\n        const sessionId = this.props.session?.id;\n\n        return this.props.modules.analytics.setUp({\n            ...setUpAnalyticsObj,\n            ...(sessionId && { sessionId })\n        });\n    }\n\n    /**\n     * A function for all UIElements, or BaseElement, to use to create an analytics action for when it's been:\n     *  - mounted,\n     *  - a PM has been selected\n     *  - onSubmit has been called (as a result of the pay button being pressed)\n     *\n     *  In some other cases e.g. 3DS2 components, this function is overridden to allow more specific analytics actions to be created\n     */\n\n    protected submitAnalytics(analyticsObj: SendAnalyticsObject, uiElementProps?) {\n        /** Work out what the component's \"type\" is:\n         * - first check for a dedicated \"analyticsType\" (currently only applies to custom-cards)\n         * - otherwise, distinguish cards from non-cards: cards will use their static type property, everything else will use props.type\n         */\n        try {\n            let component = this.constructor['analyticsType'];\n            if (!component) {\n                component = this.constructor['type'] === 'scheme' || this.constructor['type'] === 'bcmc' ? this.constructor['type'] : this.props.type;\n            }\n\n            this.props.modules.analytics.sendAnalytics(component, analyticsObj, uiElementProps);\n        } catch (error) {\n            console.warn('Failed to submit the analytics event. Error:', error);\n        }\n    }\n\n    public submit(): void {\n        if (!this.isValid) {\n            this.showValidation();\n            return;\n        }\n\n        this.makePaymentsCall()\n            .then(sanitizeResponse)\n            .then(verifyPaymentDidNotFail)\n            .then(this.handleResponse)\n            .catch((e: PaymentResponseData | Error) => {\n                if (e instanceof CancelError) {\n                    this.setElementStatus('ready');\n                    return;\n                }\n                this.handleFailedResult(e as PaymentResponseData);\n            });\n    }\n\n    protected makePaymentsCall(): Promise<CheckoutAdvancedFlowResponse | CheckoutSessionPaymentResponse> {\n        this.setElementStatus('loading');\n\n        if (this.props.onSubmit) {\n            return this.submitUsingAdvancedFlow();\n        }\n\n        if (this.core.session) {\n            const beforeSubmitEvent: Promise<PaymentData> = this.props.beforeSubmit\n                ? new Promise((resolve, reject) =>\n                      this.props.beforeSubmit(this.data, this.elementRef, {\n                          resolve,\n                          reject: () => reject(new CancelError('beforeSubmitRejected'))\n                      })\n                  )\n                : Promise.resolve(this.data);\n\n            return beforeSubmitEvent.then(this.submitUsingSessionsFlow);\n        }\n\n        this.handleError(\n            new AdyenCheckoutError(\n                'IMPLEMENTATION_ERROR',\n                'It can not perform /payments call. Callback \"onSubmit\" is missing or Checkout session is not available'\n            )\n        );\n    }\n\n    private async submitUsingAdvancedFlow(): Promise<CheckoutAdvancedFlowResponse> {\n        return new Promise<CheckoutAdvancedFlowResponse>((resolve, reject) => {\n            // Call analytics endpoint\n            this.submitAnalytics({ type: ANALYTICS_SUBMIT_STR });\n\n            this.props.onSubmit(\n                {\n                    data: this.data,\n                    isValid: this.isValid\n                },\n                this.elementRef,\n                { resolve, reject }\n            );\n        });\n    }\n\n    private async submitUsingSessionsFlow(data: PaymentData): Promise<CheckoutSessionPaymentResponse> {\n        this.submitAnalytics({ type: ANALYTICS_SUBMIT_STR });\n\n        try {\n            return await this.core.session.submitPayment(data);\n        } catch (error: unknown) {\n            if (error instanceof AdyenCheckoutError) this.handleError(error);\n            else this.handleError(new AdyenCheckoutError('ERROR', 'Error when making /payments call', { cause: error }));\n\n            return Promise.reject(error);\n        }\n\n        // // Uncomment to simulate failed\n        // return {\n        //     resultCode: 'Refused',\n        //     sessionData:\n        //         'Ab02b4c0!BQABAgBKGgqfEz8uQlU4yCIOWjA8bkEwmbJ7Qt4r+x5IPXREu1rMjwNk5MDoHFNlv+MWvinS6nXIDniXgRzXCdSC4ksw9CNDBAjOa+B88wRoj/rLTieuWh/0leR88qkV24vtIkjsIsbJTDB78Pd8wX8MEDsXhaAdEIyX9E8eqxuQ3bwPbvLs1Dlgo1ZrfkQRzaNiuVM8ejRG0IWE1bGThJzY+sJvZZHvlDMXIlxhZcDoQvsMj/WwE6+nFJxBiC3oRzmvVn3AbkLQGtvwq16UUSfYbPzG9dXypJMtcrZAQYq2g/2+BSibCcmee9AXq/wij11BERrYmjbDt5NkkdUnDVgAB7pdqbnWX0A2sxBKeYtLSP2kxp+5LoU/Wty3fmcVA3VKVkHfgmIihkeL8lY++5hvHjnkzOE4tyx/sheiKS4zqoWE43TD6n8mpFskAzwMHq4G2o6vkXqvaKFEq7y/R2fVrCypenmRhkPASizpM265rKLU+L4E/C+LMHfN0LYKRMCrLr0gI2GAp+1PZLHgh0tCtiJC/zcJJtJs6sHNQxLUN+kxJuELUHOcuL3ivjG+mWteUnBENZu7KqOSZYetiWYRiyLOXDiBHqbxuQwTuO54L15VLkS/mYB20etibM1nn+fRmbo+1IJkCSalhwi5D7fSrpjbQTmAsOpJT1N8lC1MSNmAvAwG1kWL4JxYwXDKYyYASnsia2V5IjoiQUYwQUFBMTAzQ0E1MzdFQUVEODdDMjRERDUzOTA5QjgwQTc4QTkyM0UzODIzRDY4REFDQzk0QjlGRjgzMDVEQyJ98uZI4thGveOByYbomCeeP2Gy2rzs99FOBoDYVeWIUjyM+gfnW89DdJZAhxe74Tv0TnL5DRQYPCTRQPOoLbQ21NaeSho70FNE+n8XYKlVK5Ore6BoB6IVCaal5MkM27VmZPMmGflgcPx+pakx+EmRsYGdvYNImYxJYrRk3CI+l3T3ZiVpPPqebaVSLaSkEfu0iOFPjjLUhWN6QW6c18heE5vq/pcoeBf7p0Jgr9I5aBFY0avYG57BDGHzU1ZiQ9LLMTis2BA7Ap9pdNq8FVXL4fnoVHNZiiANOf3uvSknPKBID8sdOXUStA0crmO322FYjDqh1n6FG+D7+OJSayNsXIz6Zoy0eFn4HbT8nt8L2X2tdzkMayCYHXRwKh13Xyleqxt4WoEZmhwTmB3p9d1F0SylWnjcC6o/DnshJ9mMW/8D3oWS30Z7BwRODqKGVahRD0YGRzwMbVnEe5JFRfNvJZdLGl35L9632DVmuFQ0lr/8WNL/NrAJNtI6PXrZMNiza0/omPwPfe5ZYuD1Jgq59TX4h9d+3fdkArcJYL7AdoMZON1YEiWY5EzazQwtHd9yzdty9ZHPxAfuOfCh4OhbhFNp+v5YQ+PzKZ+UpM1VxV863+9XgWEURPNvX7qq1cpUSRzrSGq01QBBM3MKzRh5mAgqIdXgtl7L0EXAep0MECc7QY0/o3tW3VR8eEJGsSzrNxpFItqj0SEaIWo25dRfkl5zuw47GQrN9Qzxl2WV3A38MQPUqFtIr/71Rjkphgg49ZGWEYCwgFmm8jJc2/5qTabSGk4bzwiETCTzeydq30bUGqCwglj8CrFViAuQeTJm7dp+PYKMkUNvQRpnSXMj6Kz7rvAMzhzJgK62ltN2idqKxLC7WtivCUgejuQUvNreCYBQCaKwTwP02lZsJpGF9yw8gbyuoB+2aB7IZmgIB8GP4qVQ/ht5B9z/FLohK/8cSPV/4i32SNNdcwhV',\n        //     sessionResult:\n        //         'X3XtfGC7!H4sIAAAAAAAA/6tWykxRslJyDjaxNDMyM3E2MXIyNDUys3RU0lHKTS1KzkjMK3FMTs4vzSsBKgtJLS7xhYo6Z6QmZ+eXlgAVFpcklpQWA+WLUtNKi1NTlGoBMEEbz1cAAAA=iMsCaEJ5LcnsqIUtmNxjm8HtfQ8gZW8JewEU3wHz4qg='\n        // };\n    }\n\n    protected onComplete(state): void {\n        if (this.props.onComplete) this.props.onComplete(state, this.elementRef);\n    }\n\n    protected handleError = (error: AdyenCheckoutError): void => {\n        /**\n         * Set status using elementRef, which:\n         * - If Drop-in, will set status for Dropin component, and then it will propagate the new status for the active payment method component\n         * - If Component, it will set its own status\n         */\n        this.setElementStatus('ready');\n\n        if (this.props.onError) {\n            this.props.onError(error, this.elementRef);\n        }\n    };\n\n    protected handleAdditionalDetails(state: AdditionalDetailsData): void {\n        this.makeAdditionalDetailsCall(state)\n            .then(sanitizeResponse)\n            .then(verifyPaymentDidNotFail)\n            .then(this.handleResponse)\n            .catch(this.handleFailedResult);\n    }\n\n    private makeAdditionalDetailsCall(state: AdditionalDetailsData): Promise<CheckoutSessionDetailsResponse | CheckoutAdvancedFlowResponse> {\n        if (this.props.onAdditionalDetails) {\n            return new Promise<CheckoutAdvancedFlowResponse>((resolve, reject) => {\n                this.props.onAdditionalDetails(state, this.elementRef, { resolve, reject });\n            });\n        }\n\n        if (this.core.session) {\n            return this.submitAdditionalDetailsUsingSessionsFlow(state.data);\n        }\n\n        this.handleError(\n            new AdyenCheckoutError(\n                'IMPLEMENTATION_ERROR',\n                'It can not perform /payments/details call. Callback \"onAdditionalDetails\" is missing or Checkout session is not available'\n            )\n        );\n    }\n\n    private async submitAdditionalDetailsUsingSessionsFlow(data: any): Promise<CheckoutSessionDetailsResponse> {\n        try {\n            return await this.core.session.submitDetails(data);\n        } catch (error: unknown) {\n            if (error instanceof AdyenCheckoutError) this.handleError(error);\n            else this.handleError(new AdyenCheckoutError('ERROR', 'Error when making /details call', { cause: error }));\n\n            return Promise.reject(error);\n        }\n    }\n\n    public handleAction(action: PaymentAction, props = {}): UIElement | null {\n        if (!action || !action.type) {\n            if (hasOwnProperty(action, 'action') && hasOwnProperty(action, 'resultCode')) {\n                throw new Error(\n                    'handleAction::Invalid Action - the passed action object itself has an \"action\" property and ' +\n                        'a \"resultCode\": have you passed in the whole response object by mistake?'\n                );\n            }\n            throw new Error('handleAction::Invalid Action - the passed action object does not have a \"type\" property');\n        }\n\n        const paymentAction = this.core.createFromAction(action, {\n            ...this.elementRef.props,\n            ...props,\n            onAdditionalDetails: this.handleAdditionalDetails\n        });\n\n        if (paymentAction) {\n            this.unmount();\n            return paymentAction.mount(this._node);\n        }\n\n        return null;\n    }\n\n    protected onActionHandled(actionHandledObj: ActionHandledReturnObject) {\n        this.props?.onActionHandled?.({ originalAction: this.props.originalAction, ...actionHandledObj });\n    }\n\n    protected handleOrder = (response: PaymentResponseData): void => {\n        const { order } = response;\n\n        const updateCorePromise = this.core.session ? this.core.update({ order }) : this.handleAdvanceFlowPaymentMethodsUpdate(order);\n\n        void updateCorePromise.then(() => {\n            this.props.onOrderUpdated?.({ order });\n        });\n    };\n\n    /**\n     * Handles when the payment fails. The payment fails when:\n     * - adv flow: the merchant rejects the payment due to a critical error\n     * - adv flow: the merchant resolves the payment with a failed resultCode\n     * - sessions: a network error occurs when making the payment\n     * - sessions: the payment fails with a failed resultCode\n     *\n     * @param result\n     */\n    protected handleFailedResult = (result?: PaymentResponseData): void => {\n        if (assertIsDropin(this.elementRef)) {\n            this.elementRef.displayFinalAnimation('error');\n        }\n\n        cleanupFinalResult(result);\n        this.props.onPaymentFailed?.(result, this.elementRef);\n    };\n\n    protected handleSuccessResult = (result: PaymentResponseData): void => {\n        if (assertIsDropin(this.elementRef)) {\n            this.elementRef.displayFinalAnimation('success');\n        }\n\n        cleanupFinalResult(result);\n        this.props.onPaymentCompleted?.(result, this.elementRef);\n    };\n\n    /**\n     * Handles a /payments or /payments/details response.\n     * The component will handle automatically actions, orders, and final results.\n     *\n     * @param rawResponse -\n     */\n    protected handleResponse(rawResponse: RawPaymentResponse): void {\n        const response = sanitizeResponse(rawResponse);\n\n        if (response.action) {\n            this.elementRef.handleAction(response.action);\n            return;\n        }\n\n        if (response.order?.remainingAmount?.value > 0) {\n            // we don't want to call elementRef here, use the component handler\n            // we do this way so the logic on handlingOrder is associated with payment method\n            this.handleOrder(response);\n            return;\n        }\n\n        this.handleSuccessResult(response);\n    }\n\n    protected handleKeyPress(e: h.JSX.TargetedKeyboardEvent<HTMLInputElement> | KeyboardEvent) {\n        if (e.key === 'Enter' || e.code === 'Enter') {\n            e.preventDefault(); // Prevent <form> submission if Component is placed inside a form\n\n            this.onEnterKeyPressed(document?.activeElement, this);\n        }\n    }\n\n    /**\n     * Handle Enter key pressed from a UIElement (called via handleKeyPress)\n     * @param obj\n     */\n    protected onEnterKeyPressed(activeElement: Element, component: UIElement) {\n        if (this.props.onEnterKeyPressed) {\n            this.props.onEnterKeyPressed(activeElement, component);\n        } else {\n            (activeElement as HTMLElement).blur();\n            this.submit();\n        }\n    }\n\n    /**\n     * Call update on parent instance\n     * This function exist to make safe access to the protected _parentInstance\n     * @param options - CoreOptions\n     */\n    public updateParent(options: CoreConfiguration = {}): Promise<ICore> {\n        return this.elementRef.core.update(options);\n    }\n\n    public setComponentRef = (ref: ComponentMethodsRef) => {\n        this.componentRef = ref;\n    };\n\n    /**\n     * Get the current validation status of the element\n     */\n    public get isValid(): boolean {\n        return false;\n    }\n\n    /**\n     * Get the element icon URL for the current environment\n     */\n\n    public get icon(): string {\n        const type = this.props.paymentMethodType || this.type;\n        return this.props.icon ?? this.resources.getImage()(type);\n    }\n\n    /**\n     * Get the element's displayable name\n     */\n    public get displayName(): string {\n        const paymentMethodFromResponse = this.core.paymentMethodsResponse?.paymentMethods?.find(pm => pm.type === this.type);\n        return this.props.name || paymentMethodFromResponse?.name || this.type;\n    }\n\n    /**\n     * Get the element accessible name, used in the aria-label of the button that controls selected payment method\n     */\n    public get accessibleName(): string {\n        return this.displayName;\n    }\n\n    /**\n     * Used to display the second line of a payment method item\n     */\n    get additionalInfo(): string {\n        return null;\n    }\n\n    /**\n     * Return the type of an element\n     */\n    public get type(): string {\n        return this.props.type || this.constructor['type'];\n    }\n\n    /**\n     * Get the payButton component for the current element\n     */\n    protected payButton = (props: PayButtonFunctionProps) => {\n        return <PayButton {...props} amount={this.props.amount} secondaryAmount={this.props.secondaryAmount} onClick={this.submit} />;\n    };\n\n    /**\n     * Used in the Partial Orders flow.\n     * When the Order is updated, the merchant can request new payment methods based on the new remaining amount\n     *\n     * @private\n     */\n    protected async handleAdvanceFlowPaymentMethodsUpdate(order: Order | null, amount?: PaymentAmount) {\n        return new Promise<void | PaymentMethodsResponse>((resolve, reject) => {\n            if (!this.props.onPaymentMethodsRequest) {\n                return resolve();\n            }\n\n            this.props.onPaymentMethodsRequest(\n                {\n                    ...(order && {\n                        order: {\n                            orderData: order.orderData,\n                            pspReference: order.pspReference\n                        }\n                    }),\n                    locale: this.core.options.locale\n                },\n                { resolve, reject }\n            );\n        })\n            .catch(error => {\n                this.handleError(\n                    new AdyenCheckoutError(\n                        'IMPLEMENTATION_ERROR',\n                        'Something failed during payment methods update or onPaymentMethodsRequest was not implemented',\n                        {\n                            cause: error\n                        }\n                    )\n                );\n            })\n            .then(paymentMethodsResponse => {\n                // in the case of the session flow we get order, amount, countryCode and shopperLocale from initialize()\n                // apply the same logic here for order and amount\n                // in the future it might be worth moving this logic to be performed by the core on update()\n                // it would make this more consistent\n                return this.core.update({\n                    ...(paymentMethodsResponse && { paymentMethodsResponse }),\n                    order,\n                    amount: order ? order.remainingAmount : amount\n                });\n            });\n    }\n}\n\nexport default UIElement;\n"],"names":["UIElement","BaseElement","buildElementProps","componentProps","finalProps","showPayButton","this","core","getCorePropsForComponent","isStoredPaymentMethod","paymentMethodsResponse","find","type","constructor","isDropin","assertIsDropin","props","formatProps","getRegulatoryDefaults","options","countryCode","storeElementRefOnCore","storeElementReference","isAvailable","Promise","resolve","setState","newState","state","onChange","showValidation","componentRef","setElementStatus","status","elementRef","setStatus","data","isValid","errors","valid","setUpAnalytics","setUpAnalyticsObj","sessionId","session","id","modules","analytics","setUp","submitAnalytics","analyticsObj","uiElementProps","component","sendAnalytics","error","console","warn","submit","makePaymentsCall","then","sanitizeResponse","verifyPaymentDidNotFail","handleResponse","catch","e","CancelError","handleFailedResult","onSubmit","submitUsingAdvancedFlow","beforeSubmit","reject","submitUsingSessionsFlow","handleError","AdyenCheckoutError","ANALYTICS_SUBMIT_STR","submitPayment","cause","onComplete","handleAdditionalDetails","makeAdditionalDetailsCall","onAdditionalDetails","submitAdditionalDetailsUsingSessionsFlow","submitDetails","handleAction","action","hasOwnProperty","Error","paymentAction","createFromAction","unmount","mount","_node","onActionHandled","actionHandledObj","originalAction","rawResponse","response","order","remainingAmount","value","handleOrder","handleSuccessResult","handleKeyPress","key","code","preventDefault","onEnterKeyPressed","document","activeElement","blur","updateParent","update","icon","paymentMethodType","resources","getImage","displayName","paymentMethodFromResponse","paymentMethods","pm","name","accessibleName","additionalInfo","handleAdvanceFlowPaymentMethodsUpdate","amount","onPaymentMethodsRequest","orderData","pspReference","locale","checkout","super","_define_property","onError","onOrderUpdated","result","displayFinalAnimation","cleanupFinalResult","onPaymentFailed","onPaymentCompleted","setComponentRef","ref","payButton","h","PayButton","secondaryAmount","onClick","register","bind","undefined","txVariants"],"mappings":"mqBA8BO,MAAeA,UAA6DC,EAyC5DC,iBAAAA,CAAkBC,GACjC,MAMMC,EAAa,CACfC,eAAe,KAPKC,KAAKC,KAAKC,gCACFL,GAAgBM,sBAE1C,GACAH,KAAKC,KAAKG,uBAAuBC,KAAKR,GAAgBS,MAAQN,KAAKO,YAAmB,SAMrFV,GAGDW,EAAWC,EAAeT,MAEhCA,KAAKU,MAAQV,KAAKW,YAAY,IACvBX,KAAKO,YAA2B,gBAChCK,EAAsBZ,KAAKC,KAAKY,QAAQC,YAAaN,MACrDV,GAEX,CAEUiB,qBAAAA,CAAsBL,GACvBA,GAAOF,UACRR,KAAKC,KAAKe,sBAAsBhB,KAExC,CAEOiB,WAAAA,GACH,OAAOC,QAAQC,SACnB,CAEOC,QAAAA,CAASC,GACZrB,KAAKsB,MAAQ,IAAKtB,KAAKsB,SAAUD,GACjCrB,KAAKuB,UACT,CAEOC,cAAAA,GAEH,OADIxB,KAAKyB,cAAgBzB,KAAKyB,aAAaD,gBAAgBxB,KAAKyB,aAAaD,iBACtExB,IACX,CAEO0B,gBAAAA,CAAiBC,EAAyBjB,GAE7C,OADAV,KAAK4B,YAAYC,UAAUF,EAAQjB,GAC5BV,IACX,CAEO6B,SAAAA,CAAUF,EAAyBjB,GAItC,OAHIV,KAAKyB,cAAcI,WACnB7B,KAAKyB,aAAaI,UAAUF,EAAQjB,GAEjCV,IACX,CAEUuB,QAAAA,GACNvB,KAAKU,MAAMa,WACP,CACIO,KAAM9B,KAAK8B,KACXC,QAAS/B,KAAK+B,QACdC,OAAQhC,KAAKsB,MAAMU,OACnBC,MAAOjC,KAAKsB,MAAMW,OAEtBjC,KAAK4B,WAEb,CAGUM,cAAAA,CAAeC,GACrB,MAAMC,EAAYpC,KAAKU,MAAM2B,SAASC,GAEtC,OAAOtC,KAAKU,MAAM6B,QAAQC,UAAUC,MAAM,IACnCN,KACCC,GAAa,CAAEA,cAE3B,CAWA,eAAAM,CAA0BC,EAAmCC,GAKzD,IACI,IAAIC,EAAY7C,KAAKO,YAA4B,cAC5CsC,IACDA,EAAyC,WAA7B7C,KAAKO,YAAY,MAAqD,SAA7BP,KAAKO,YAAY,KAAqBP,KAAKO,YAAY,KAAUP,KAAKU,MAAMJ,MAGrIN,KAAKU,MAAM6B,QAAQC,UAAUM,cAAcD,EAAWF,EAAcC,EACxE,CAAE,MAAOG,GACLC,QAAQC,KAAK,+CAAgDF,EACjE,CACJ,CAEOG,MAAAA,GACElD,KAAK+B,QAKV/B,KAAKmD,mBACAC,KAAKC,GACLD,KAAKE,GACLF,KAAKpD,KAAKuD,gBACVC,OAAOC,IACAA,aAAaC,EACb1D,KAAK0B,iBAAiB,SAG1B1B,KAAK2D,mBAAmBF,EAAAA,IAb5BzD,KAAKwB,gBAeb,CAEU2B,gBAAAA,GAGN,GAFAnD,KAAK0B,iBAAiB,WAElB1B,KAAKU,MAAMkD,SACX,OAAO5D,KAAK6D,0BAGhB,GAAI7D,KAAKC,KAAKoC,QAAS,CAUnB,OATgDrC,KAAKU,MAAMoD,aACrD,IAAI5C,SAAQ,CAACC,EAAS4C,IAClB/D,KAAKU,MAAMoD,aAAa9D,KAAK8B,KAAM9B,KAAK4B,WAAY,CAChDT,UACA4C,OAAQ,IAAMA,EAAO,IAAIL,EAAY,6BAG7CxC,QAAQC,QAAQnB,KAAK8B,OAEFsB,KAAKpD,KAAKgE,wBACvC,CAEAhE,KAAKiE,YACD,IAAIC,EACA,uBACA,0GAGZ,CAEA,6BAAcL,GACV,OAAO,IAAI3C,SAAsC,CAACC,EAAS4C,KAEvD/D,KAAK0C,gBAAgB,CAAEpC,KAAM6D,IAE7BnE,KAAKU,MAAMkD,SACP,CACI9B,KAAM9B,KAAK8B,KACXC,QAAS/B,KAAK+B,SAElB/B,KAAK4B,WACL,CAAET,UAAS4C,UAAO,GAG9B,CAEA,6BAAcC,CAAwBlC,GAClC9B,KAAK0C,gBAAgB,CAAEpC,KAAM6D,IAE7B,IACI,aAAanE,KAAKC,KAAKoC,QAAQ+B,cAActC,EACjD,CAAE,MAAOiB,GAIL,OAHIA,aAAiBmB,EAAoBlE,KAAKiE,YAAYlB,GACrD/C,KAAKiE,YAAY,IAAIC,EAAmB,QAAS,mCAAoC,CAAEG,MAAOtB,KAE5F7B,QAAQ6C,OAAOhB,EAC1B,CAUJ,CAEUuB,UAAAA,CAAWhD,GACbtB,KAAKU,MAAM4D,YAAYtE,KAAKU,MAAM4D,WAAWhD,EAAOtB,KAAK4B,WACjE,CAeU2C,uBAAAA,CAAwBjD,GAC9BtB,KAAKwE,0BAA0BlD,GAC1B8B,KAAKC,GACLD,KAAKE,GACLF,KAAKpD,KAAKuD,gBACVC,MAAMxD,KAAK2D,mBACpB,CAEQa,yBAAAA,CAA0BlD,GAC9B,OAAItB,KAAKU,MAAM+D,oBACJ,IAAIvD,SAAsC,CAACC,EAAS4C,KACvD/D,KAAKU,MAAM+D,oBAAoBnD,EAAOtB,KAAK4B,WAAY,CAAET,UAAS4C,UAAO,IAI7E/D,KAAKC,KAAKoC,QACHrC,KAAK0E,yCAAyCpD,EAAMQ,WAG/D9B,KAAKiE,YACD,IAAIC,EACA,uBACA,6HAGZ,CAEA,8CAAcQ,CAAyC5C,GACnD,IACI,aAAa9B,KAAKC,KAAKoC,QAAQsC,cAAc7C,EACjD,CAAE,MAAOiB,GAIL,OAHIA,aAAiBmB,EAAoBlE,KAAKiE,YAAYlB,GACrD/C,KAAKiE,YAAY,IAAIC,EAAmB,QAAS,kCAAmC,CAAEG,MAAOtB,KAE3F7B,QAAQ6C,OAAOhB,EAC1B,CACJ,CAEO6B,YAAAA,CAAaC,EAAuBnE,EAAQ,IAC/C,IAAKmE,IAAWA,EAAOvE,KAAM,CACzB,GAAIwE,EAAeD,EAAQ,WAAaC,EAAeD,EAAQ,cAC3D,MAAM,IAAIE,MACN,wKAIR,MAAM,IAAIA,MAAM,0FACpB,CAEA,MAAMC,EAAgBhF,KAAKC,KAAKgF,iBAAiBJ,EAAQ,IAClD7E,KAAK4B,WAAWlB,SAChBA,EACH+D,oBAAqBzE,KAAKuE,0BAG9B,OAAIS,GACAhF,KAAKkF,UACEF,EAAcG,MAAMnF,KAAKoF,QAG7B,IACX,CAEUC,eAAAA,CAAgBC,GACtBtF,KAAKU,OAAO2E,kBAAkB,CAAEE,eAAgBvF,KAAKU,MAAM6E,kBAAmBD,GAClF,CA6CU/B,cAAAA,CAAeiC,GACrB,MAAMC,EAAWpC,EAAiBmC,GAE9BC,EAASZ,OACT7E,KAAK4B,WAAWgD,aAAaa,EAASZ,QAItCY,EAASC,OAAOC,iBAAiBC,MAAQ,EAGzC5F,KAAK6F,YAAYJ,GAIrBzF,KAAK8F,oBAAoBL,EAC7B,CAEUM,cAAAA,CAAetC,GACP,UAAVA,EAAEuC,KAA8B,UAAXvC,EAAEwC,OACvBxC,EAAEyC,iBAEFlG,KAAKmG,kBAAkBC,UAAUC,cAAerG,MAExD,CAMA,iBAAAmG,CAA4BE,EAAwBxD,GAC5C7C,KAAKU,MAAMyF,kBACXnG,KAAKU,MAAMyF,kBAAkBE,EAAexD,IAE3CwD,EAA8BC,OAC/BtG,KAAKkD,SAEb,CAOA,YAAAqD,CAAoB1F,EAA6B,IAC7C,OAAOb,KAAK4B,WAAW3B,KAAKuG,OAAO3F,EACvC,CASA,WAAWkB,GACP,OAAO,CACX,CAMA,QAAW0E,GACP,MAAMnG,EAAON,KAAKU,MAAMgG,mBAAqB1G,KAAKM,KAClD,OAAON,KAAKU,MAAM+F,MAAQzG,KAAK2G,UAAUC,UAAf5G,CAA0BM,EACxD,CAKA,eAAWuG,GACP,MAAMC,EAA4B9G,KAAKC,KAAKG,wBAAwB2G,gBAAgB1G,MAAK2G,GAAMA,EAAG1G,OAASN,KAAKM,OAChH,OAAON,KAAKU,MAAMuG,MAAQH,GAA2BG,MAAQjH,KAAKM,IACtE,CAKA,kBAAW4G,GACP,OAAOlH,KAAK6G,WAChB,CAKA,kBAAIM,GACA,OAAO,IACX,CAKA,QAAW7G,GACP,OAAON,KAAKU,MAAMJ,MAAQN,KAAKO,YAAmB,IACtD,CAeA,2CAAgB6G,CAAsC1B,EAAqB2B,GACvE,OAAO,IAAInG,SAAuC,CAACC,EAAS4C,KACxD,IAAK/D,KAAKU,MAAM4G,wBACZ,OAAOnG,IAGXnB,KAAKU,MAAM4G,wBACP,IACQ5B,GAAS,CACTA,MAAO,CACH6B,UAAW7B,EAAM6B,UACjBC,aAAc9B,EAAM8B,eAG5BC,OAAQzH,KAAKC,KAAKY,QAAQ4G,QAE9B,CAAEtG,UAAS4C,UAAO,IAGrBP,OAAMT,IACH/C,KAAKiE,YACD,IAAIC,EACA,uBACA,gGACA,CACIG,MAAOtB,IACX,IAIXK,MAAKhD,GAKKJ,KAAKC,KAAKuG,OAAO,IAChBpG,GAA0B,CAAEA,0BAChCsF,QACA2B,OAAQ3B,EAAQA,EAAMC,gBAAkB0B,KAGxD,CA7eA9G,WAAAA,CAAYmH,EAAiBhH,GACzBiH,MAAMD,EAAUhH,GAdpBkH,EAAA5H,KAAUyB,oBAAV,GAEAmG,EAAA5H,KAAU2G,iBAAV,GAEAiB,EAAA5H,KAAO4B,kBAAP,GAoOAgG,EAAA5H,KAAUiE,eAAelB,IAMrB/C,KAAK0B,iBAAiB,SAElB1B,KAAKU,MAAMmH,SACX7H,KAAKU,MAAMmH,QAAQ9E,EAAO/C,KAAK4B,WACnC,IAsEJgG,EAAA5H,KAAU6F,eAAeJ,IACrB,MAAMC,MAAEA,GAAUD,GAEQzF,KAAKC,KAAKoC,QAAUrC,KAAKC,KAAKuG,OAAO,CAAEd,UAAW1F,KAAKoH,sCAAsC1B,IAEhGtC,MAAK,KACxBpD,KAAKU,MAAMoH,iBAAiB,CAAEpC,SAAM,GACxC,IAYJkC,EAAA5H,KAAU2D,sBAAsBoE,IACxBtH,EAAeT,KAAK4B,aACpB5B,KAAK4B,WAAWoG,sBAAsB,SAG1CC,EAAmBF,GACnB/H,KAAKU,MAAMwH,kBAAkBH,EAAQ/H,KAAK4B,WAAU,IAGxDgG,EAAA5H,KAAU8F,uBAAuBiC,IACzBtH,EAAeT,KAAK4B,aACpB5B,KAAK4B,WAAWoG,sBAAsB,WAG1CC,EAAmBF,GACnB/H,KAAKU,MAAMyH,qBAAqBJ,EAAQ/H,KAAK4B,WAAU,IAyD3DgG,EAAA5H,KAAOoI,mBAAmBC,IACtBrI,KAAKyB,aAAe4G,CAAAA,IAmDxBT,EAAA5H,KAAUsI,aAAa5H,GACZ6H,EAACC,EAAAA,IAAc9H,EAAO2G,OAAQrH,KAAKU,MAAM2G,OAAQoB,gBAAiBzI,KAAKU,MAAM+H,gBAAiBC,QAAS1I,KAAKkD,WAxbnHlD,KAAKC,KAAK0I,SAAS3I,KAAKO,aAExBP,KAAKkD,OAASlD,KAAKkD,OAAO0F,KAAK5I,MAC/BA,KAAKoB,SAAWpB,KAAKoB,SAASwH,KAAK5I,MACnCA,KAAKsE,WAAatE,KAAKsE,WAAWsE,KAAK5I,MACvCA,KAAK4E,aAAe5E,KAAK4E,aAAagE,KAAK5I,MAC3CA,KAAK6F,YAAc7F,KAAK6F,YAAY+C,KAAK5I,MACzCA,KAAKuE,wBAA0BvE,KAAKuE,wBAAwBqE,KAAK5I,MACjEA,KAAKuD,eAAiBvD,KAAKuD,eAAeqF,KAAK5I,MAC/CA,KAAK0B,iBAAmB1B,KAAK0B,iBAAiBkH,KAAK5I,MACnDA,KAAK0C,gBAAkB1C,KAAK0C,gBAAgBkG,KAAK5I,MACjDA,KAAKmD,iBAAmBnD,KAAKmD,iBAAiByF,KAAK5I,MACnDA,KAAKwE,0BAA4BxE,KAAKwE,0BAA0BoE,KAAK5I,MACrEA,KAAKgE,wBAA0BhE,KAAKgE,wBAAwB4E,KAAK5I,MAEjEA,KAAK4B,WAAclB,GAASA,EAAMkB,YAAe5B,KACjDA,KAAK2G,UAAY3G,KAAKU,MAAM6B,QAAUvC,KAAKU,MAAM6B,QAAQoE,eAAYkC,EAErE7I,KAAKe,sBAAsBf,KAAKU,OAEhCV,KAAKmG,kBAAoBnG,KAAKmG,kBAAkByC,KAAK5I,MACrDA,KAAKqF,gBAAkBrF,KAAKqF,gBAAgBuD,KAAK5I,KACrD,EAhCA4H,EAPkBlI,EAOJY,YAAOuI,GAKrBjB,EAZkBlI,EAYJoJ,aAAuB"}