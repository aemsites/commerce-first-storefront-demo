{"version":3,"file":"UIElement.js","sources":["../../../../../src/components/internal/UIElement/UIElement.tsx"],"sourcesContent":["import { h } from 'preact';\nimport BaseElement from '../BaseElement/BaseElement';\nimport PayButton from '../PayButton';\nimport { assertIsDropin, cleanupFinalResult, getRegulatoryDefaults, sanitizeResponse, verifyPaymentDidNotFail } from './utils';\nimport AdyenCheckoutError from '../../../core/Errors/AdyenCheckoutError';\nimport { hasOwnProperty } from '../../../utils/hasOwnProperty';\nimport { Resources } from '../../../core/Context/Resources';\nimport { ANALYTICS_SUBMIT_STR } from '../../../core/Analytics/constants';\n\nimport type { AnalyticsInitialEvent, SendAnalyticsObject } from '../../../core/Analytics/types';\nimport type { CoreConfiguration, ICore, AdditionalDetailsData } from '../../../core/types';\nimport type { ComponentMethodsRef, PayButtonFunctionProps, UIElementProps, UIElementStatus } from './types';\nimport type { CheckoutSessionDetailsResponse, CheckoutSessionPaymentResponse } from '../../../core/CheckoutSession/types';\nimport type {\n    ActionHandledReturnObject,\n    CheckoutAdvancedFlowResponse,\n    Order,\n    PaymentAction,\n    PaymentAmount,\n    PaymentData,\n    PaymentMethodsResponse,\n    PaymentResponseData,\n    RawPaymentResponse\n} from '../../../types/global-types';\nimport type { IDropin } from '../../Dropin/types';\nimport type { NewableComponent } from '../../../core/core.registry';\nimport CancelError from '../../../core/Errors/CancelError';\n\nimport './UIElement.scss';\n\nexport abstract class UIElement<P extends UIElementProps = UIElementProps> extends BaseElement<P> {\n    protected componentRef: any;\n\n    protected resources: Resources;\n\n    public elementRef: UIElement;\n\n    public static type = undefined;\n\n    /**\n     * Defines all txVariants that the Component supports (in case it support multiple ones besides the 'type' one)\n     */\n    public static txVariants: string[] = [];\n\n    constructor(checkout: ICore, props?: P) {\n        super(checkout, props);\n\n        this.core.register(this.constructor as NewableComponent);\n\n        this.submit = this.submit.bind(this);\n        this.setState = this.setState.bind(this);\n        this.onComplete = this.onComplete.bind(this);\n        this.handleAction = this.handleAction.bind(this);\n        this.handleOrder = this.handleOrder.bind(this);\n        this.handleAdditionalDetails = this.handleAdditionalDetails.bind(this);\n        this.handleResponse = this.handleResponse.bind(this);\n        this.setElementStatus = this.setElementStatus.bind(this);\n        this.submitAnalytics = this.submitAnalytics.bind(this);\n        this.makePaymentsCall = this.makePaymentsCall.bind(this);\n        this.makeAdditionalDetailsCall = this.makeAdditionalDetailsCall.bind(this);\n        this.submitUsingSessionsFlow = this.submitUsingSessionsFlow.bind(this);\n\n        this.elementRef = (props && props.elementRef) || this;\n        this.resources = this.props.modules ? this.props.modules.resources : undefined;\n\n        this.storeElementRefOnCore(this.props);\n\n        this.onEnterKeyPressed = this.onEnterKeyPressed.bind(this);\n        this.onActionHandled = this.onActionHandled.bind(this);\n    }\n\n    protected override buildElementProps(componentProps?: P) {\n        const globalCoreProps = this.core.getCorePropsForComponent();\n        const isStoredPaymentMethod = !!componentProps?.isStoredPaymentMethod;\n        const paymentMethodsResponseProps = isStoredPaymentMethod\n            ? {}\n            : this.core.paymentMethodsResponse.find(componentProps?.type || this.constructor['type']);\n\n        const finalProps = {\n            showPayButton: true,\n            ...globalCoreProps,\n            ...paymentMethodsResponseProps,\n            ...componentProps\n        };\n\n        const isDropin = assertIsDropin(this as unknown as IDropin);\n\n        this.props = this.formatProps({\n            ...this.constructor['defaultProps'], // component defaults\n            ...getRegulatoryDefaults(this.core.options.countryCode, isDropin), // regulatory defaults\n            ...finalProps // the rest (inc. merchant defined config)\n        });\n    }\n\n    protected storeElementRefOnCore(props?: P) {\n        if (!props?.isDropin) {\n            this.core.storeElementReference(this);\n        }\n    }\n\n    public isAvailable(): Promise<void> {\n        return Promise.resolve();\n    }\n\n    public setState(newState: object): void {\n        this.state = { ...this.state, ...newState };\n        this.onChange();\n    }\n\n    public showValidation(): this {\n        if (this.componentRef && this.componentRef.showValidation) this.componentRef.showValidation();\n        return this;\n    }\n\n    public setElementStatus(status: UIElementStatus, props?: any): this {\n        this.elementRef?.setStatus(status, props);\n        return this;\n    }\n\n    public setStatus(status: UIElementStatus, props?): this {\n        if (this.componentRef?.setStatus) {\n            this.componentRef.setStatus(status, props);\n        }\n        return this;\n    }\n\n    protected onChange(): void {\n        this.props.onChange?.(\n            {\n                data: this.data,\n                isValid: this.isValid,\n                errors: this.state.errors,\n                valid: this.state.valid\n            },\n            this.elementRef\n        );\n    }\n\n    // Only called once, for UIElements (including Dropin), as they are being mounted\n    protected setUpAnalytics(setUpAnalyticsObj: AnalyticsInitialEvent) {\n        const sessionId = this.props.session?.id;\n\n        return this.props.modules.analytics.setUp({\n            ...setUpAnalyticsObj,\n            ...(sessionId && { sessionId })\n        });\n    }\n\n    /**\n     * A function for all UIElements, or BaseElement, to use to create an analytics action for when it's been:\n     *  - mounted,\n     *  - a PM has been selected\n     *  - onSubmit has been called (as a result of the pay button being pressed)\n     *\n     *  In some other cases e.g. 3DS2 components, this function is overridden to allow more specific analytics actions to be created\n     */\n\n    protected submitAnalytics(analyticsObj: SendAnalyticsObject, uiElementProps?) {\n        /** Work out what the component's \"type\" is:\n         * - first check for a dedicated \"analyticsType\" (currently only applies to custom-cards)\n         * - otherwise, distinguish cards from non-cards: cards will use their static type property, everything else will use props.type\n         */\n        try {\n            let component = this.constructor['analyticsType'];\n            if (!component) {\n                component = this.constructor['type'] === 'scheme' || this.constructor['type'] === 'bcmc' ? this.constructor['type'] : this.props.type;\n            }\n\n            this.props.modules.analytics.sendAnalytics(component, analyticsObj, uiElementProps);\n        } catch (error) {\n            console.warn('Failed to submit the analytics event. Error:', error);\n        }\n    }\n\n    public submit(): void {\n        if (!this.isValid) {\n            this.showValidation();\n            return;\n        }\n\n        this.makePaymentsCall()\n            .then(sanitizeResponse)\n            .then(verifyPaymentDidNotFail)\n            .then(this.handleResponse)\n            .catch((e: PaymentResponseData | Error) => {\n                if (e instanceof CancelError) {\n                    this.setElementStatus('ready');\n                    return;\n                }\n                this.handleFailedResult(e as PaymentResponseData);\n            });\n    }\n\n    protected makePaymentsCall(): Promise<CheckoutAdvancedFlowResponse | CheckoutSessionPaymentResponse> {\n        this.setElementStatus('loading');\n\n        if (this.props.onSubmit) {\n            return this.submitUsingAdvancedFlow();\n        }\n\n        if (this.core.session) {\n            const beforeSubmitEvent: Promise<PaymentData> = this.props.beforeSubmit\n                ? new Promise((resolve, reject) =>\n                      this.props.beforeSubmit(this.data, this.elementRef, {\n                          resolve,\n                          reject: () => reject(new CancelError('beforeSubmitRejected'))\n                      })\n                  )\n                : Promise.resolve(this.data);\n\n            return beforeSubmitEvent.then(this.submitUsingSessionsFlow);\n        }\n\n        this.handleError(\n            new AdyenCheckoutError(\n                'IMPLEMENTATION_ERROR',\n                'It can not perform /payments call. Callback \"onSubmit\" is missing or Checkout session is not available'\n            )\n        );\n    }\n\n    private async submitUsingAdvancedFlow(): Promise<CheckoutAdvancedFlowResponse> {\n        return new Promise<CheckoutAdvancedFlowResponse>((resolve, reject) => {\n            // Call analytics endpoint\n            this.submitAnalytics({ type: ANALYTICS_SUBMIT_STR });\n\n            this.props.onSubmit(\n                {\n                    data: this.data,\n                    isValid: this.isValid\n                },\n                this.elementRef,\n                { resolve, reject }\n            );\n        });\n    }\n\n    private async submitUsingSessionsFlow(data: PaymentData): Promise<CheckoutSessionPaymentResponse> {\n        this.submitAnalytics({ type: ANALYTICS_SUBMIT_STR });\n\n        try {\n            return await this.core.session.submitPayment(data);\n        } catch (error: unknown) {\n            if (error instanceof AdyenCheckoutError) this.handleError(error);\n            else this.handleError(new AdyenCheckoutError('ERROR', 'Error when making /payments call', { cause: error }));\n\n            return Promise.reject(error);\n        }\n\n        // // Uncomment to simulate failed\n        // return {\n        //     resultCode: 'Refused',\n        //     sessionData:\n        //         'Ab02b4c0!BQABAgBKGgqfEz8uQlU4yCIOWjA8bkEwmbJ7Qt4r+x5IPXREu1rMjwNk5MDoHFNlv+MWvinS6nXIDniXgRzXCdSC4ksw9CNDBAjOa+B88wRoj/rLTieuWh/0leR88qkV24vtIkjsIsbJTDB78Pd8wX8MEDsXhaAdEIyX9E8eqxuQ3bwPbvLs1Dlgo1ZrfkQRzaNiuVM8ejRG0IWE1bGThJzY+sJvZZHvlDMXIlxhZcDoQvsMj/WwE6+nFJxBiC3oRzmvVn3AbkLQGtvwq16UUSfYbPzG9dXypJMtcrZAQYq2g/2+BSibCcmee9AXq/wij11BERrYmjbDt5NkkdUnDVgAB7pdqbnWX0A2sxBKeYtLSP2kxp+5LoU/Wty3fmcVA3VKVkHfgmIihkeL8lY++5hvHjnkzOE4tyx/sheiKS4zqoWE43TD6n8mpFskAzwMHq4G2o6vkXqvaKFEq7y/R2fVrCypenmRhkPASizpM265rKLU+L4E/C+LMHfN0LYKRMCrLr0gI2GAp+1PZLHgh0tCtiJC/zcJJtJs6sHNQxLUN+kxJuELUHOcuL3ivjG+mWteUnBENZu7KqOSZYetiWYRiyLOXDiBHqbxuQwTuO54L15VLkS/mYB20etibM1nn+fRmbo+1IJkCSalhwi5D7fSrpjbQTmAsOpJT1N8lC1MSNmAvAwG1kWL4JxYwXDKYyYASnsia2V5IjoiQUYwQUFBMTAzQ0E1MzdFQUVEODdDMjRERDUzOTA5QjgwQTc4QTkyM0UzODIzRDY4REFDQzk0QjlGRjgzMDVEQyJ98uZI4thGveOByYbomCeeP2Gy2rzs99FOBoDYVeWIUjyM+gfnW89DdJZAhxe74Tv0TnL5DRQYPCTRQPOoLbQ21NaeSho70FNE+n8XYKlVK5Ore6BoB6IVCaal5MkM27VmZPMmGflgcPx+pakx+EmRsYGdvYNImYxJYrRk3CI+l3T3ZiVpPPqebaVSLaSkEfu0iOFPjjLUhWN6QW6c18heE5vq/pcoeBf7p0Jgr9I5aBFY0avYG57BDGHzU1ZiQ9LLMTis2BA7Ap9pdNq8FVXL4fnoVHNZiiANOf3uvSknPKBID8sdOXUStA0crmO322FYjDqh1n6FG+D7+OJSayNsXIz6Zoy0eFn4HbT8nt8L2X2tdzkMayCYHXRwKh13Xyleqxt4WoEZmhwTmB3p9d1F0SylWnjcC6o/DnshJ9mMW/8D3oWS30Z7BwRODqKGVahRD0YGRzwMbVnEe5JFRfNvJZdLGl35L9632DVmuFQ0lr/8WNL/NrAJNtI6PXrZMNiza0/omPwPfe5ZYuD1Jgq59TX4h9d+3fdkArcJYL7AdoMZON1YEiWY5EzazQwtHd9yzdty9ZHPxAfuOfCh4OhbhFNp+v5YQ+PzKZ+UpM1VxV863+9XgWEURPNvX7qq1cpUSRzrSGq01QBBM3MKzRh5mAgqIdXgtl7L0EXAep0MECc7QY0/o3tW3VR8eEJGsSzrNxpFItqj0SEaIWo25dRfkl5zuw47GQrN9Qzxl2WV3A38MQPUqFtIr/71Rjkphgg49ZGWEYCwgFmm8jJc2/5qTabSGk4bzwiETCTzeydq30bUGqCwglj8CrFViAuQeTJm7dp+PYKMkUNvQRpnSXMj6Kz7rvAMzhzJgK62ltN2idqKxLC7WtivCUgejuQUvNreCYBQCaKwTwP02lZsJpGF9yw8gbyuoB+2aB7IZmgIB8GP4qVQ/ht5B9z/FLohK/8cSPV/4i32SNNdcwhV',\n        //     sessionResult:\n        //         'X3XtfGC7!H4sIAAAAAAAA/6tWykxRslJyDjaxNDMyM3E2MXIyNDUys3RU0lHKTS1KzkjMK3FMTs4vzSsBKgtJLS7xhYo6Z6QmZ+eXlgAVFpcklpQWA+WLUtNKi1NTlGoBMEEbz1cAAAA=iMsCaEJ5LcnsqIUtmNxjm8HtfQ8gZW8JewEU3wHz4qg='\n        // };\n    }\n\n    protected onComplete(state): void {\n        if (this.props.onComplete) this.props.onComplete(state, this.elementRef);\n    }\n\n    protected handleError = (error: AdyenCheckoutError): void => {\n        /**\n         * Set status using elementRef, which:\n         * - If Drop-in, will set status for Dropin component, and then it will propagate the new status for the active payment method component\n         * - If Component, it will set its own status\n         */\n        this.setElementStatus('ready');\n\n        if (this.props.onError) {\n            this.props.onError(error, this.elementRef);\n        }\n    };\n\n    protected handleAdditionalDetails(state: AdditionalDetailsData): void {\n        this.makeAdditionalDetailsCall(state)\n            .then(sanitizeResponse)\n            .then(verifyPaymentDidNotFail)\n            .then(this.handleResponse)\n            .catch(this.handleFailedResult);\n    }\n\n    private makeAdditionalDetailsCall(state: AdditionalDetailsData): Promise<CheckoutSessionDetailsResponse | CheckoutAdvancedFlowResponse> {\n        if (this.props.onAdditionalDetails) {\n            return new Promise<CheckoutAdvancedFlowResponse>((resolve, reject) => {\n                this.props.onAdditionalDetails(state, this.elementRef, { resolve, reject });\n            });\n        }\n\n        if (this.core.session) {\n            return this.submitAdditionalDetailsUsingSessionsFlow(state.data);\n        }\n\n        this.handleError(\n            new AdyenCheckoutError(\n                'IMPLEMENTATION_ERROR',\n                'It can not perform /payments/details call. Callback \"onAdditionalDetails\" is missing or Checkout session is not available'\n            )\n        );\n    }\n\n    private async submitAdditionalDetailsUsingSessionsFlow(data: any): Promise<CheckoutSessionDetailsResponse> {\n        try {\n            return await this.core.session.submitDetails(data);\n        } catch (error: unknown) {\n            if (error instanceof AdyenCheckoutError) this.handleError(error);\n            else this.handleError(new AdyenCheckoutError('ERROR', 'Error when making /details call', { cause: error }));\n\n            return Promise.reject(error);\n        }\n    }\n\n    public handleAction(action: PaymentAction, props = {}): UIElement | null {\n        if (!action || !action.type) {\n            if (hasOwnProperty(action, 'action') && hasOwnProperty(action, 'resultCode')) {\n                throw new Error(\n                    'handleAction::Invalid Action - the passed action object itself has an \"action\" property and ' +\n                        'a \"resultCode\": have you passed in the whole response object by mistake?'\n                );\n            }\n            throw new Error('handleAction::Invalid Action - the passed action object does not have a \"type\" property');\n        }\n\n        const paymentAction = this.core.createFromAction(action, {\n            ...this.elementRef.props,\n            ...props,\n            onAdditionalDetails: this.handleAdditionalDetails\n        });\n\n        if (paymentAction) {\n            this.unmount();\n            return paymentAction.mount(this._node);\n        }\n\n        return null;\n    }\n\n    protected onActionHandled(actionHandledObj: ActionHandledReturnObject) {\n        this.props?.onActionHandled?.({ originalAction: this.props.originalAction, ...actionHandledObj });\n    }\n\n    protected handleOrder = (response: PaymentResponseData): void => {\n        const { order } = response;\n\n        const updateCorePromise = this.core.session ? this.core.update({ order }) : this.handleAdvanceFlowPaymentMethodsUpdate(order);\n\n        void updateCorePromise.then(() => {\n            this.props.onOrderUpdated?.({ order });\n        });\n    };\n\n    /**\n     * Handles when the payment fails. The payment fails when:\n     * - adv flow: the merchant rejects the payment due to a critical error\n     * - adv flow: the merchant resolves the payment with a failed resultCode\n     * - sessions: a network error occurs when making the payment\n     * - sessions: the payment fails with a failed resultCode\n     *\n     * @param result\n     */\n    protected handleFailedResult = (result?: PaymentResponseData): void => {\n        if (assertIsDropin(this.elementRef)) {\n            this.elementRef.displayFinalAnimation('error');\n        }\n\n        cleanupFinalResult(result);\n        this.props.onPaymentFailed?.(result, this.elementRef);\n    };\n\n    protected handleSuccessResult = (result: PaymentResponseData): void => {\n        if (assertIsDropin(this.elementRef)) {\n            this.elementRef.displayFinalAnimation('success');\n        }\n\n        cleanupFinalResult(result);\n        this.props.onPaymentCompleted?.(result, this.elementRef);\n    };\n\n    /**\n     * Handles a /payments or /payments/details response.\n     * The component will handle automatically actions, orders, and final results.\n     *\n     * @param rawResponse -\n     */\n    protected handleResponse(rawResponse: RawPaymentResponse): void {\n        const response = sanitizeResponse(rawResponse);\n\n        if (response.action) {\n            this.elementRef.handleAction(response.action);\n            return;\n        }\n\n        if (response.order?.remainingAmount?.value > 0) {\n            // we don't want to call elementRef here, use the component handler\n            // we do this way so the logic on handlingOrder is associated with payment method\n            this.handleOrder(response);\n            return;\n        }\n\n        this.handleSuccessResult(response);\n    }\n\n    protected handleKeyPress(e: h.JSX.TargetedKeyboardEvent<HTMLInputElement> | KeyboardEvent) {\n        if (e.key === 'Enter' || e.code === 'Enter') {\n            e.preventDefault(); // Prevent <form> submission if Component is placed inside a form\n\n            this.onEnterKeyPressed(document?.activeElement, this);\n        }\n    }\n\n    /**\n     * Handle Enter key pressed from a UIElement (called via handleKeyPress)\n     * @param obj\n     */\n    protected onEnterKeyPressed(activeElement: Element, component: UIElement) {\n        if (this.props.onEnterKeyPressed) {\n            this.props.onEnterKeyPressed(activeElement, component);\n        } else {\n            (activeElement as HTMLElement).blur();\n            this.submit();\n        }\n    }\n\n    /**\n     * Call update on parent instance\n     * This function exist to make safe access to the protected _parentInstance\n     * @param options - CoreOptions\n     */\n    public updateParent(options: CoreConfiguration = {}): Promise<ICore> {\n        return this.elementRef.core.update(options);\n    }\n\n    public setComponentRef = (ref: ComponentMethodsRef) => {\n        this.componentRef = ref;\n    };\n\n    /**\n     * Get the current validation status of the element\n     */\n    public get isValid(): boolean {\n        return false;\n    }\n\n    /**\n     * Get the element icon URL for the current environment\n     */\n\n    public get icon(): string {\n        const type = this.props.paymentMethodType || this.type;\n        return this.props.icon ?? this.resources.getImage()(type);\n    }\n\n    /**\n     * Get the element's displayable name\n     */\n    public get displayName(): string {\n        const paymentMethodFromResponse = this.core.paymentMethodsResponse?.paymentMethods?.find(pm => pm.type === this.type);\n        return this.props.name || paymentMethodFromResponse?.name || this.type;\n    }\n\n    /**\n     * Get the element accessible name, used in the aria-label of the button that controls selected payment method\n     */\n    public get accessibleName(): string {\n        return this.displayName;\n    }\n\n    /**\n     * Used to display the second line of a payment method item\n     */\n    get additionalInfo(): string {\n        return null;\n    }\n\n    /**\n     * Return the type of an element\n     */\n    public get type(): string {\n        return this.props.type || this.constructor['type'];\n    }\n\n    /**\n     * Get the payButton component for the current element\n     */\n    protected payButton = (props: PayButtonFunctionProps) => {\n        return <PayButton {...props} amount={this.props.amount} secondaryAmount={this.props.secondaryAmount} onClick={this.submit} />;\n    };\n\n    /**\n     * Used in the Partial Orders flow.\n     * When the Order is updated, the merchant can request new payment methods based on the new remaining amount\n     *\n     * @private\n     */\n    protected async handleAdvanceFlowPaymentMethodsUpdate(order: Order | null, amount?: PaymentAmount) {\n        return new Promise<void | PaymentMethodsResponse>((resolve, reject) => {\n            if (!this.props.onPaymentMethodsRequest) {\n                return resolve();\n            }\n\n            this.props.onPaymentMethodsRequest(\n                {\n                    ...(order && {\n                        order: {\n                            orderData: order.orderData,\n                            pspReference: order.pspReference\n                        }\n                    }),\n                    locale: this.core.options.locale\n                },\n                { resolve, reject }\n            );\n        })\n            .catch(error => {\n                this.handleError(\n                    new AdyenCheckoutError(\n                        'IMPLEMENTATION_ERROR',\n                        'Something failed during payment methods update or onPaymentMethodsRequest was not implemented',\n                        {\n                            cause: error\n                        }\n                    )\n                );\n            })\n            .then(paymentMethodsResponse => {\n                // in the case of the session flow we get order, amount, countryCode and shopperLocale from initialize()\n                // apply the same logic here for order and amount\n                // in the future it might be worth moving this logic to be performed by the core on update()\n                // it would make this more consistent\n                return this.core.update({\n                    ...(paymentMethodsResponse && { paymentMethodsResponse }),\n                    order,\n                    amount: order ? order.remainingAmount : amount\n                });\n            });\n    }\n}\n\nexport default UIElement;\n"],"names":["UIElement","BaseElement","buildElementProps","componentProps","finalProps","_object_spread","showPayButton","this","core","getCorePropsForComponent","isStoredPaymentMethod","paymentMethodsResponse","find","type","constructor","isDropin","assertIsDropin","props","formatProps","getRegulatoryDefaults","options","countryCode","storeElementRefOnCore","storeElementReference","isAvailable","Promise","resolve","setState","newState","state","onChange","showValidation","componentRef","setElementStatus","status","_this_elementRef","elementRef","setStatus","_this_componentRef","_this_props_onChange","_this_props","call","data","isValid","errors","valid","setUpAnalytics","setUpAnalyticsObj","_this_props_session","sessionId","session","id","modules","analytics","setUp","submitAnalytics","analyticsObj","uiElementProps","component","sendAnalytics","error","console","warn","submit","makePaymentsCall","then","sanitizeResponse","verifyPaymentDidNotFail","handleResponse","catch","e","CancelError","handleFailedResult","onSubmit","submitUsingAdvancedFlow","beforeSubmit","reject","submitUsingSessionsFlow","handleError","AdyenCheckoutError","ANALYTICS_SUBMIT_STR","submitPayment","cause","onComplete","handleAdditionalDetails","makeAdditionalDetailsCall","onAdditionalDetails","submitAdditionalDetailsUsingSessionsFlow","submitDetails","handleAction","action","hasOwnProperty","Error","paymentAction","createFromAction","_object_spread_props","unmount","mount","_node","onActionHandled","actionHandledObj","_this_props_onActionHandled","originalAction","rawResponse","response","order","remainingAmount","value","handleOrder","handleSuccessResult","handleKeyPress","document","key","code","preventDefault","onEnterKeyPressed","activeElement","blur","updateParent","update","icon","paymentMethodType","_this_props_icon","resources","getImage","displayName","_this_core_paymentMethodsResponse_paymentMethods","_this_core_paymentMethodsResponse","paymentMethodFromResponse","paymentMethods","pm","name","accessibleName","additionalInfo","handleAdvanceFlowPaymentMethodsUpdate","amount","onPaymentMethodsRequest","orderData","pspReference","locale","checkout","super","_define_property","onError","_this_props_onOrderUpdated","onOrderUpdated","result","_this_props_onPaymentFailed","displayFinalAnimation","cleanupFinalResult","onPaymentFailed","_this_props_onPaymentCompleted","onPaymentCompleted","setComponentRef","ref","payButton","h","PayButton","secondaryAmount","onClick","register","bind","undefined","txVariants"],"mappings":"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"}